{"version":3,"file":"static/chunks/3270.3776545cd4aa359b.js","mappings":"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","sources":["webpack://_N_E/./app/components/input-field.tsx","webpack://_N_E/./app/components/forms/teacher-form.tsx"],"sourcesContent":["import React from 'react';\nimport { FieldError } from 'react-hook-form';\n\ntype InputFieldProps = {\n  label: string;\n  type?: string;\n  register: any;\n  name: string;\n  defaultValue?: string;\n  errors?: FieldError;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n};\n\nconst InputField = ({\n  label,\n  type = 'text',\n  register,\n  name,\n  defaultValue,\n  errors,\n  inputProps,\n}: InputFieldProps) => {\n  return (\n    <div className=\"flex flex-col gap-2 w-full md:w-1/4\">\n      <label htmlFor={name} className=\"text-xs text-gray-500\">\n        {label}\n      </label>\n      <input\n        id={name}\n        type={type}\n        defaultValue={defaultValue}\n        {...inputProps}\n        {...register(name)}\n        className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n      />\n      {errors?.message && (\n        <p className=\"text-red-500 text-xs\">{errors?.message.toString()}</p>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n","'use client';\nimport React from 'react';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport InputField from '../input-field';\nimport Image from 'next/image';\n\ntype FormInfoProps = {\n  type: 'create' | 'update';\n  data?: any;\n};\n\nconst schema = z.object({\n  username: z\n    .string()\n    .min(3, { message: 'Username must be at least 3 characters long' })\n    .max(20, { message: 'Username must be at most 20 characters long' }),\n  email: z.string().email({ message: 'Invalid email address' }),\n  password: z\n    .string()\n    .min(6, { message: 'Password must be at least 6 characters long' }),\n  firstName: z.string().min(1, { message: 'First name is required!' }),\n  lastName: z.string().min(1, { message: 'Last name is required' }),\n  phone: z.string().min(1, { message: 'Phone is required' }),\n  address: z.string().min(1, { message: 'Address is required' }),\n  bloodType: z.string().min(1, { message: 'Blood type is required' }),\n  birthday: z.date({ message: 'Birthday is required' }),\n  sex: z.enum(['male', 'female'], { message: 'Sex is required' }),\n  img: z.instanceof(File, { message: 'Image is required' }),\n});\n\ntype Inputs = z.infer<typeof schema>;\n\nconst TeacherForm = ({ type, data }: FormInfoProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>({\n    resolver: zodResolver(schema),\n  });\n\n  const onSubmit = handleSubmit((data) => {\n    console.log(data);\n    // Handle form submission logic here\n    // For example, you can send the data to an API or perform any other action\n    // reset form after submission\n  });\n\n  return (\n    <form className=\"flex flex-col gap-8\" onSubmit={onSubmit}>\n      <h1 className=\"text-xl font-semibold\">Create a new teacher</h1>\n      <span className=\"text-xs text-gray-400 capitalize font-medium\">\n        Authentication Information\n      </span>\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <InputField\n          label=\"Username\"\n          type=\"text\"\n          register={register}\n          name=\"username\"\n          errors={errors.username}\n          defaultValue={data?.username}\n        />\n        <InputField\n          label=\"Email\"\n          type=\"email\"\n          register={register}\n          name=\"email\"\n          errors={errors.email}\n          defaultValue={data?.email}\n        />\n        <InputField\n          label=\"Password\"\n          type=\"password\"\n          register={register}\n          name=\"password\"\n          errors={errors.password}\n          defaultValue={data?.password}\n        />\n      </div>\n      <span className=\"text-xs text-gray-400 capitalize font-medium\">\n        Personal Information\n      </span>\n      <div className=\"flex justify-between flex-wrap gap-4\">\n        <InputField\n          label=\"First Name\"\n          type=\"text\"\n          register={register}\n          name=\"firstName\"\n          errors={errors.firstName}\n          defaultValue={data?.firstName}\n        />\n        <InputField\n          label=\"Last Name\"\n          type=\"text\"\n          register={register}\n          name=\"lastName\"\n          errors={errors.lastName}\n          defaultValue={data?.lastName}\n        />\n        <InputField\n          label=\"Phone\"\n          type=\"number\"\n          register={register}\n          name=\"phone\"\n          errors={errors.phone}\n          defaultValue={data?.phone}\n        />\n\n        <InputField\n          label=\"Address\"\n          type=\"text\"\n          register={register}\n          name=\"address\"\n          errors={errors.address}\n          defaultValue={data?.address}\n        />\n        <InputField\n          label=\"Blood Type\"\n          type=\"text\"\n          register={register}\n          name=\"bloodType\"\n          errors={errors.bloodType}\n          defaultValue={data?.bloodType}\n        />\n        <InputField\n          label=\"Birthday\"\n          type=\"date\"\n          register={register}\n          name=\"birthday\"\n          errors={errors.birthday}\n          defaultValue={data?.birthday}\n        />\n\n        <div className=\"flex flex-col gap-2 w-full md:w-1/4\">\n          <label htmlFor=\"sex\" className=\"text-xs text-gray-500\">\n            Sex\n          </label>\n          <select\n            id=\"sex\"\n            defaultValue={data?.sex}\n            {...register('sex')}\n            className=\"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full\"\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n          {errors.sex?.message && (\n            <p className=\"text-red-500 text-xs\">\n              {errors.sex?.message.toString()}\n            </p>\n          )}\n        </div>\n        <div className=\"flex flex-col gap-2 w-full md:w-1/4 justify-center\">\n          <label\n            htmlFor=\"img\"\n            className=\"text-xs text-gray-500 flex items-center gap-2 cursor-pointer\"\n          >\n            <Image src=\"/upload.png\" alt=\"\" width={28} height={28} />\n            <span>Upload a photo</span>\n          </label>\n          <input id=\"img\" type=\"file\" {...register('img')} className=\"hidden\" />\n          {errors.img?.message && (\n            <p className=\"text-red-500 text-xs\">\n              {errors.img?.message.toString()}\n            </p>\n          )}\n        </div>\n      </div>\n      <button type=\"submit\" className=\"bg-blue-400 text-white p-2 rounded-md\">\n        {type === 'create' ? 'Create' : 'Update'}\n      </button>\n    </form>\n  );\n};\n\nexport default TeacherForm;\n"],"names":["label","type","InputField","register","name","defaultValue","errors","inputProps","div","className","htmlFor","input","id","message","p","schema","z","object","username","string","min","max","email","password","firstName","lastName","phone","address","bloodType","birthday","date","sex","enum","img","instanceof","File","TeacherForm","data","handleSubmit","formState","useForm","resolver","zodResolver","onSubmit","console","log","form","h1","span","select","option","value","toString","Image","src","alt","width","height","button"],"sourceRoot":"","ignoreList":[]}