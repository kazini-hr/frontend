{"version":3,"file":"static/chunks/app/outsourced/employees/page-c2dce1fa6eaa4102.js","mappings":"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","sources":["webpack://_N_E/./components/ui/dropdown-menu.tsx","webpack://_N_E/./app/outsourced/employees/page.tsx","webpack://_N_E/?ba1c"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","\"use client\";\n\nimport React, { useState } from \"react\";\nimport {\n  useOutsourcedEmployees,\n  useBankCodes,\n  useCreateEmployee,\n  useUpdateEmployee,\n  useDeleteEmployee,\n  useBulkUploadEmployees,\n  handleApiError,\n} from \"@/lib/api-hooks\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Plus,\n  Upload,\n  Search,\n  MoreHorizontal,\n  Edit,\n  Trash2,\n  Users,\n  Download,\n  AlertCircle,\n  CheckCircle,\n  FileText,\n} from \"lucide-react\";\nimport type { EmployeeOutsourced } from \"@/lib/types\";\nimport { useAuth } from \"@/lib/auth-context\";\n\n// Add Employee Modal Component\nconst AddEmployeeModal = ({\n  isOpen,\n  onClose,\n  employee = null,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  employee?: EmployeeOutsourced | null;\n}) => {\n  const [formData, setFormData] = useState({\n    accountNumber: employee?.accountNumber || \"\",\n    amount: employee?.amount?.toString() || \"\",\n    bankCode: employee?.bankCode || \"\",\n  });\n\n  const { user } = useAuth();\n  const { data: bankCodes } = useBankCodes();\n  const createEmployee = useCreateEmployee();\n  const updateEmployee = useUpdateEmployee();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const data = {\n        accountNumber: formData.accountNumber,\n        amount: parseInt(formData.amount),\n        bankCode: formData.bankCode,\n        companyId: user?.company?.id,\n      };\n\n      if (employee) {\n        await updateEmployee.mutateAsync({ id: employee.id, ...data });\n        toast({\n          title: \"Employee Updated\",\n          description: \"Employee details have been updated successfully.\",\n        });\n      } else {\n        await createEmployee.mutateAsync(data);\n        toast({\n          title: \"Employee Added\",\n          description: \"New employee has been added successfully.\",\n        });\n      }\n\n      onClose();\n      setFormData({ accountNumber: \"\", amount: \"\", bankCode: \"\" });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: handleApiError(error),\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>\n            {employee ? \"Edit Employee\" : \"Add New Employee\"}\n          </DialogTitle>\n          <DialogDescription>\n            {employee\n              ? \"Update employee details below\"\n              : \"Enter employee details to add them to the outsourced payroll system\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"accountNumber\">Account Number</Label>\n            <Input\n              id=\"accountNumber\"\n              placeholder=\"1234567890\"\n              value={formData.accountNumber}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  accountNumber: e.target.value,\n                }))\n              }\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"amount\">Amount (KES)</Label>\n            <Input\n              id=\"amount\"\n              type=\"number\"\n              placeholder=\"50000\"\n              min=\"1\"\n              value={formData.amount}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, amount: e.target.value }))\n              }\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"bankCode\">Bank</Label>\n            <Select\n              value={formData.bankCode}\n              onValueChange={(value) =>\n                setFormData((prev) => ({ ...prev, bankCode: value }))\n              }\n              required\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select a bank\" />\n              </SelectTrigger>\n              <SelectContent>\n                {bankCodes?.bankCodes.map((bank) => (\n                  <SelectItem key={bank.code} value={bank.code}>\n                    {bank.name} ({bank.code})\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <DialogFooter>\n            <Button type=\"button\" variant=\"outline\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={createEmployee.isPending || updateEmployee.isPending}\n            >\n              {createEmployee.isPending || updateEmployee.isPending\n                ? \"Saving...\"\n                : employee\n                ? \"Update Employee\"\n                : \"Add Employee\"}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\n// Bulk Upload Modal Component\nconst BulkUploadModal = ({\n  isOpen,\n  onClose,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [uploadErrors, setUploadErrors] = useState<string[]>([]);\n\n  const { data: bankCodes } = useBankCodes();\n  const bulkUpload = useBulkUploadEmployees();\n  const { toast } = useToast();\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (file.type !== \"text/csv\" && !file.name.endsWith(\".csv\")) {\n        toast({\n          title: \"Invalid File Type\",\n          description: \"Please select a CSV file.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      if (file.size > 5 * 1024 * 1024) {\n        // 5MB\n        toast({\n          title: \"File Too Large\",\n          description: \"Please select a file smaller than 5MB.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      setSelectedFile(file);\n      setUploadErrors([]);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n\n    try {\n      await bulkUpload.mutateAsync(selectedFile);\n      toast({\n        title: \"Upload Successful\",\n        description: \"Employees have been uploaded successfully.\",\n      });\n      onClose();\n      setSelectedFile(null);\n    } catch (error: any) {\n      const errorMsg = handleApiError(error);\n      if (error.response?.data?.detail?.errors) {\n        setUploadErrors(error.response.data.detail.errors);\n      } else {\n        toast({\n          title: \"Upload Failed\",\n          description: errorMsg,\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n\n  const downloadTemplate = () => {\n    const csvContent = `account_number,amount,bank_code\n1234567890,50000,01\n0987654321,75000,03\n1122334455,100000,11`;\n\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"employee_template.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>Bulk Upload Employees</DialogTitle>\n          <DialogDescription>\n            Upload a CSV file to add multiple employees at once\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Bank Codes Reference */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-sm\">Bank Codes Reference</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"max-h-32 overflow-y-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"text-xs\">Bank Name</TableHead>\n                      <TableHead className=\"text-xs\">Code</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {bankCodes?.bankCodes.map((bank) => (\n                      <TableRow key={bank.code}>\n                        <TableCell className=\"text-xs\">{bank.name}</TableCell>\n                        <TableCell className=\"text-xs font-mono\">\n                          {bank.code}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* CSV Format Instructions */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-sm\">CSV Format Requirements</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <p className=\"text-sm text-muted-foreground\">\n                Your CSV file must have exactly 3 columns: account_number,\n                amount, bank_code\n              </p>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-xs font-semibold\">Example:</Label>\n                <pre className=\"text-xs bg-muted p-2 rounded overflow-x-auto\">\n                  {`account_number,amount,bank_code\n1234567890,50000,01\n0987654321,75000,03\n1122334455,100000,11`}\n                </pre>\n              </div>\n\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={downloadTemplate}\n                className=\"w-full\"\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Download Template\n              </Button>\n            </CardContent>\n          </Card>\n\n          {/* File Upload */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"csvFile\">Select CSV File</Label>\n            <Input\n              id=\"csvFile\"\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileSelect}\n              className=\"cursor-pointer\"\n            />\n            {selectedFile && (\n              <p className=\"text-sm text-green-600 flex items-center\">\n                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                {selectedFile.name} selected\n              </p>\n            )}\n          </div>\n\n          {/* Upload Errors */}\n          {uploadErrors.length > 0 && (\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                <div className=\"space-y-1\">\n                  <p className=\"font-semibold\">\n                    Upload Failed - Please fix these errors:\n                  </p>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    {uploadErrors.map((error, index) => (\n                      <li key={index} className=\"text-xs\">\n                        {error}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </AlertDescription>\n            </Alert>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button type=\"button\" variant=\"outline\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            onClick={handleUpload}\n            disabled={!selectedFile || bulkUpload.isPending}\n          >\n            {bulkUpload.isPending ? \"Uploading...\" : \"Upload Employees\"}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\n// Delete Confirmation Modal\nconst DeleteConfirmModal = ({\n  isOpen,\n  onClose,\n  employee,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  employee: EmployeeOutsourced | null;\n}) => {\n  const deleteEmployee = useDeleteEmployee();\n  const { toast } = useToast();\n\n  const handleDelete = async () => {\n    if (!employee) return;\n\n    try {\n      await deleteEmployee.mutateAsync(employee.id);\n      toast({\n        title: \"Employee Deleted\",\n        description: \"Employee has been removed from the system.\",\n      });\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: handleApiError(error),\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Delete Employee</DialogTitle>\n          <DialogDescription>\n            Are you sure you want to delete this employee? This action cannot be\n            undone.\n          </DialogDescription>\n        </DialogHeader>\n\n        {employee && (\n          <div className=\"bg-muted p-3 rounded\">\n            <p>\n              <strong>Account:</strong> {employee.accountNumber}\n            </p>\n            <p>\n              <strong>Amount:</strong> KES {employee.amount.toLocaleString()}\n            </p>\n            <p>\n              <strong>Bank Code:</strong> {employee.bankCode}\n            </p>\n          </div>\n        )}\n\n        <DialogFooter>\n          <Button type=\"button\" variant=\"outline\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"destructive\"\n            onClick={handleDelete}\n            disabled={deleteEmployee.isPending}\n          >\n            {deleteEmployee.isPending ? \"Deleting...\" : \"Delete Employee\"}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\n// Main Employee Management Page\nexport default function EmployeesPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showInactive, setShowInactive] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isBulkModalOpen, setIsBulkModalOpen] = useState(false);\n  const [editingEmployee, setEditingEmployee] =\n    useState<EmployeeOutsourced | null>(null);\n  const [deletingEmployee, setDeletingEmployee] =\n    useState<EmployeeOutsourced | null>(null);\n\n  const {\n    data: employees,\n    isLoading,\n    error,\n  } = useOutsourcedEmployees(showInactive);\n  const { data: bankCodes } = useBankCodes();\n\n  // @ts-ignore\n  const employeeList = employees?.items || [];\n\n  const filteredEmployees =\n    employeeList?.filter(\n      (employee: { accountNumber: string; bankCode: string }) =>\n        employee.accountNumber\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase()) ||\n        employee.bankCode.toLowerCase().includes(searchTerm.toLowerCase())\n    ) || [];\n\n  const getBankName = (bankCode: string) => {\n    return (\n      bankCodes?.bankCodes.find((bank) => bank.code === bankCode)?.name ||\n      bankCode\n    );\n  };\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto py-6 px-4\">\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Failed to load employees. Please try again later.\n          </AlertDescription>\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-6 px-4 space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">\n            Employee Management\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Manage employees in your outsourced payroll system\n          </p>\n        </div>\n\n        <div className=\"flex gap-2\">\n          <Button\n            onClick={() => setIsBulkModalOpen(true)}\n            variant=\"outline\"\n            className=\"flex items-center gap-2\"\n          >\n            <Upload className=\"h-4 w-4\" />\n            Bulk Upload\n          </Button>\n          <Button\n            onClick={() => setIsAddModalOpen(true)}\n            className=\"flex items-center gap-2\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            Add Employee\n          </Button>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Employees\n            </CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{employees?.length || 0}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Active Employees\n            </CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {employeeList?.filter((emp: { isActive: any }) => emp.isActive)\n                .length || 0}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Monthly Amount\n            </CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              KES{\" \"}\n              {employeeList\n                ?.filter((emp: { isActive: any }) => emp.isActive)\n                .reduce((sum: any, emp: { amount: any }) => sum + emp.amount, 0)\n                .toLocaleString() || \"0\"}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters and Search */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search by account number or bank code...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-8\"\n                />\n              </div>\n            </div>\n\n            <Button\n              variant={showInactive ? \"default\" : \"outline\"}\n              onClick={() => setShowInactive(!showInactive)}\n            >\n              {showInactive ? \"Show Active Only\" : \"Include Inactive\"}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Employee Table */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          {isLoading ? (\n            <div className=\"space-y-3\">\n              {Array.from({ length: 5 }).map((_, i) => (\n                <Skeleton key={i} className=\"h-12 w-full\" />\n              ))}\n            </div>\n          ) : filteredEmployees.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Users className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <p className=\"text-lg font-medium\">No employees found</p>\n              <p className=\"text-muted-foreground\">\n                {searchTerm\n                  ? \"Try adjusting your search criteria\"\n                  : \"Get started by adding your first employee\"}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Account Number</TableHead>\n                  <TableHead>Amount (KES)</TableHead>\n                  <TableHead>Bank</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Created</TableHead>\n                  <TableHead className=\"w-[100px]\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredEmployees.map((employee: EmployeeOutsourced) => (\n                  <TableRow key={employee.id}>\n                    <TableCell className=\"font-mono\">\n                      {employee.accountNumber}\n                    </TableCell>\n                    <TableCell className=\"font-medium\">\n                      KES {employee.amount.toLocaleString()}\n                    </TableCell>\n                    <TableCell>\n                      <div>\n                        <div className=\"font-medium\">\n                          {getBankName(employee.bankCode)}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground font-mono\">\n                          {employee.bankCode}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Badge\n                        variant={employee.isActive ? \"default\" : \"secondary\"}\n                      >\n                        {employee.isActive ? \"Active\" : \"Inactive\"}\n                      </Badge>\n                    </TableCell>\n                    <TableCell>\n                      {new Date(employee.createdAt).toLocaleDateString()}\n                    </TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuItem\n                            onClick={() => setEditingEmployee(employee)}\n                          >\n                            <Edit className=\"h-4 w-4 mr-2\" />\n                            Edit\n                          </DropdownMenuItem>\n                          <DropdownMenuItem\n                            onClick={() => setDeletingEmployee(employee)}\n                            className=\"text-red-600\"\n                          >\n                            <Trash2 className=\"h-4 w-4 mr-2\" />\n                            Delete\n                          </DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Modals */}\n      <AddEmployeeModal\n        isOpen={isAddModalOpen}\n        onClose={() => setIsAddModalOpen(false)}\n      />\n\n      <AddEmployeeModal\n        isOpen={!!editingEmployee}\n        onClose={() => setEditingEmployee(null)}\n        employee={editingEmployee}\n      />\n\n      <BulkUploadModal\n        isOpen={isBulkModalOpen}\n        onClose={() => setIsBulkModalOpen(false)}\n      />\n\n      <DeleteConfirmModal\n        isOpen={!!deletingEmployee}\n        onClose={() => setDeletingEmployee(null)}\n        employee={deletingEmployee}\n      />\n    </div>\n  );\n}\n","import(/* webpackMode: \"eager\" */ \"/Users/aka/Workspace/KaziniHR/hrms/app/outsourced/employees/page.tsx\");\n"],"names":["DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","DropdownMenuSubTrigger","React","ref","className","inset","children","props","cn","ChevronRight","displayName","DropdownMenuContent","sideOffset","DropdownMenuItem","checked","span","Check","DropdownMenuRadioItem","Circle","DropdownMenuSeparator","AddEmployeeModal","employee","isOpen","onClose","formData","setFormData","useState","accountNumber","amount","toString","bankCode","user","useAuth","data","bankCodes","useBankCodes","createEmployee","useCreateEmployee","updateEmployee","useUpdateEmployee","toast","useToast","handleSubmit","e","preventDefault","parseInt","companyId","company","id","mutateAsync","title","description","error","handleApiError","variant","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogDescription","form","onSubmit","div","Label","htmlFor","Input","placeholder","value","onChange","prev","target","required","type","min","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","map","SelectItem","bank","code","name","DialogFooter","Button","onClick","disabled","isPending","BulkUploadModal","selectedFile","setSelectedFile","uploadErrors","setUploadErrors","bulkUpload","useBulkUploadEmployees","handleUpload","errorMsg","response","detail","errors","Card","CardHeader","CardTitle","CardContent","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","p","pre","size","downloadTemplate","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","Download","accept","handleFileSelect","file","files","endsWith","CheckCircle","length","Alert","AlertCircle","AlertDescription","ul","index","li","DeleteConfirmModal","deleteEmployee","useDeleteEmployee","handleDelete","strong","toLocaleString","EmployeesPage","searchTerm","setSearchTerm","showInactive","setShowInactive","isAddModalOpen","setIsAddModalOpen","isBulkModalOpen","setIsBulkModalOpen","editingEmployee","setEditingEmployee","deletingEmployee","setDeletingEmployee","employees","isLoading","useOutsourcedEmployees","employeeList","items","filter","toLowerCase","includes","getBankName","find","h1","Upload","Plus","Users","emp","isActive","FileText","reduce","sum","Search","Array","from","_","i","Skeleton","filteredEmployees","Badge","Date","createdAt","toLocaleDateString","asChild","MoreHorizontal","align","Edit","Trash2"],"sourceRoot":"","ignoreList":[]}