{"version":3,"file":"static/chunks/app/(auth)/signup/page-ab9def1fde0cccaa.js","mappings":"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","sources":["webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/./components/ui/button.tsx","webpack://_N_E/./components/ui/form.tsx","webpack://_N_E/./components/ui/popover.tsx","webpack://_N_E/./components/ui/calendar.tsx","webpack://_N_E/./components/forms/signup-form.tsx","webpack://_N_E/./components/ui/select.tsx","webpack://_N_E/","webpack://_N_E/./components/ui/input.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverAnchor = PopoverPrimitive.Anchor\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n","\"use client\"\n\nimport * as React from \"react\"\nimport {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"lucide-react\"\nimport { DayButton, DayPicker, getDefaultClassNames } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  captionLayout = \"label\",\n  buttonVariant = \"ghost\",\n  formatters,\n  components,\n  ...props\n}: React.ComponentProps<typeof DayPicker> & {\n  buttonVariant?: React.ComponentProps<typeof Button>[\"variant\"]\n}) {\n  const defaultClassNames = getDefaultClassNames()\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\n        \"bg-background group/calendar p-3 [--cell-size:2rem] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent\",\n        String.raw`rtl:**:[.rdp-button\\_next>svg]:rotate-180`,\n        String.raw`rtl:**:[.rdp-button\\_previous>svg]:rotate-180`,\n        className\n      )}\n      captionLayout={captionLayout}\n      formatters={{\n        formatMonthDropdown: (date) =>\n          date.toLocaleString(\"default\", { month: \"short\" }),\n        ...formatters,\n      }}\n      classNames={{\n        root: cn(\"w-fit\", defaultClassNames.root),\n        months: cn(\n          \"relative flex flex-col gap-4 md:flex-row\",\n          defaultClassNames.months\n        ),\n        month: cn(\"flex w-full flex-col gap-4\", defaultClassNames.month),\n        nav: cn(\n          \"absolute inset-x-0 top-0 flex w-full items-center justify-between gap-1\",\n          defaultClassNames.nav\n        ),\n        button_previous: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"h-[--cell-size] w-[--cell-size] select-none p-0 aria-disabled:opacity-50\",\n          defaultClassNames.button_previous\n        ),\n        button_next: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"h-[--cell-size] w-[--cell-size] select-none p-0 aria-disabled:opacity-50\",\n          defaultClassNames.button_next\n        ),\n        month_caption: cn(\n          \"flex h-[--cell-size] w-full items-center justify-center px-[--cell-size]\",\n          defaultClassNames.month_caption\n        ),\n        dropdowns: cn(\n          \"flex h-[--cell-size] w-full items-center justify-center gap-1.5 text-sm font-medium\",\n          defaultClassNames.dropdowns\n        ),\n        dropdown_root: cn(\n          \"has-focus:border-ring border-input shadow-xs has-focus:ring-ring/50 has-focus:ring-[3px] relative rounded-md border\",\n          defaultClassNames.dropdown_root\n        ),\n        dropdown: cn(\"absolute inset-0 opacity-0\", defaultClassNames.dropdown),\n        caption_label: cn(\n          \"select-none font-medium\",\n          captionLayout === \"label\"\n            ? \"text-sm\"\n            : \"[&>svg]:text-muted-foreground flex h-8 items-center gap-1 rounded-md pl-2 pr-1 text-sm [&>svg]:size-3.5\",\n          defaultClassNames.caption_label\n        ),\n        table: \"w-full border-collapse\",\n        weekdays: cn(\"flex\", defaultClassNames.weekdays),\n        weekday: cn(\n          \"text-muted-foreground flex-1 select-none rounded-md text-[0.8rem] font-normal\",\n          defaultClassNames.weekday\n        ),\n        week: cn(\"mt-2 flex w-full\", defaultClassNames.week),\n        week_number_header: cn(\n          \"w-[--cell-size] select-none\",\n          defaultClassNames.week_number_header\n        ),\n        week_number: cn(\n          \"text-muted-foreground select-none text-[0.8rem]\",\n          defaultClassNames.week_number\n        ),\n        day: cn(\n          \"group/day relative aspect-square h-full w-full select-none p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md\",\n          defaultClassNames.day\n        ),\n        range_start: cn(\n          \"bg-accent rounded-l-md\",\n          defaultClassNames.range_start\n        ),\n        range_middle: cn(\"rounded-none\", defaultClassNames.range_middle),\n        range_end: cn(\"bg-accent rounded-r-md\", defaultClassNames.range_end),\n        today: cn(\n          \"bg-accent text-accent-foreground rounded-md data-[selected=true]:rounded-none\",\n          defaultClassNames.today\n        ),\n        outside: cn(\n          \"text-muted-foreground aria-selected:text-muted-foreground\",\n          defaultClassNames.outside\n        ),\n        disabled: cn(\n          \"text-muted-foreground opacity-50\",\n          defaultClassNames.disabled\n        ),\n        hidden: cn(\"invisible\", defaultClassNames.hidden),\n        ...classNames,\n      }}\n      components={{\n        Root: ({ className, rootRef, ...props }) => {\n          return (\n            <div\n              data-slot=\"calendar\"\n              ref={rootRef}\n              className={cn(className)}\n              {...props}\n            />\n          )\n        },\n        Chevron: ({ className, orientation, ...props }) => {\n          if (orientation === \"left\") {\n            return (\n              <ChevronLeftIcon className={cn(\"size-4\", className)} {...props} />\n            )\n          }\n\n          if (orientation === \"right\") {\n            return (\n              <ChevronRightIcon\n                className={cn(\"size-4\", className)}\n                {...props}\n              />\n            )\n          }\n\n          return (\n            <ChevronDownIcon className={cn(\"size-4\", className)} {...props} />\n          )\n        },\n        DayButton: CalendarDayButton,\n        WeekNumber: ({ children, ...props }) => {\n          return (\n            <td {...props}>\n              <div className=\"flex size-[--cell-size] items-center justify-center text-center\">\n                {children}\n              </div>\n            </td>\n          )\n        },\n        ...components,\n      }}\n      {...props}\n    />\n  )\n}\n\nfunction CalendarDayButton({\n  className,\n  day,\n  modifiers,\n  ...props\n}: React.ComponentProps<typeof DayButton>) {\n  const defaultClassNames = getDefaultClassNames()\n\n  const ref = React.useRef<HTMLButtonElement>(null)\n  React.useEffect(() => {\n    if (modifiers.focused) ref.current?.focus()\n  }, [modifiers.focused])\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"ghost\"\n      size=\"icon\"\n      data-day={day.date.toLocaleDateString()}\n      data-selected-single={\n        modifiers.selected &&\n        !modifiers.range_start &&\n        !modifiers.range_end &&\n        !modifiers.range_middle\n      }\n      data-range-start={modifiers.range_start}\n      data-range-end={modifiers.range_end}\n      data-range-middle={modifiers.range_middle}\n      className={cn(\n        \"data-[selected-single=true]:bg-primary data-[selected-single=true]:text-primary-foreground data-[range-middle=true]:bg-accent data-[range-middle=true]:text-accent-foreground data-[range-start=true]:bg-primary data-[range-start=true]:text-primary-foreground data-[range-end=true]:bg-primary data-[range-end=true]:text-primary-foreground group-data-[focused=true]/day:border-ring group-data-[focused=true]/day:ring-ring/50 flex aspect-square h-auto w-full min-w-[--cell-size] flex-col gap-1 font-normal leading-none data-[range-end=true]:rounded-md data-[range-middle=true]:rounded-none data-[range-start=true]:rounded-md group-data-[focused=true]/day:relative group-data-[focused=true]/day:z-10 group-data-[focused=true]/day:ring-[3px] [&>span]:text-xs [&>span]:opacity-70\",\n        defaultClassNames.day,\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar, CalendarDayButton }\n","\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { useState } from \"react\";\nimport { Toaster, toast } from \"sonner\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useRegisterCompany, handleAuthError } from \"@/lib/api-hooks\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"../ui/popover\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { Calendar } from \"../ui/calendar\";\n\n// Country options (you can expand this list)\nconst COUNTRIES = [\n  \"AFGHANISTAN\",\n  \"ALBANIA\",\n  \"ALGERIA\",\n  \"ARGENTINA\",\n  \"AUSTRALIA\",\n  \"AUSTRIA\",\n  \"BANGLADESH\",\n  \"BELGIUM\",\n  \"BRAZIL\",\n  \"CANADA\",\n  \"CHINA\",\n  \"COLOMBIA\",\n  \"DENMARK\",\n  \"EGYPT\",\n  \"FINLAND\",\n  \"FRANCE\",\n  \"GERMANY\",\n  \"GHANA\",\n  \"GREECE\",\n  \"INDIA\",\n  \"INDONESIA\",\n  \"IRAN\",\n  \"IRAQ\",\n  \"IRELAND\",\n  \"ISRAEL\",\n  \"ITALY\",\n  \"JAPAN\",\n  \"JORDAN\",\n  \"KENYA\",\n  \"KOREA\",\n  \"LEBANON\",\n  \"MALAYSIA\",\n  \"MEXICO\",\n  \"MOROCCO\",\n  \"NETHERLANDS\",\n  \"NEW_ZEALAND\",\n  \"NIGERIA\",\n  \"NORWAY\",\n  \"PAKISTAN\",\n  \"PERU\",\n  \"PHILIPPINES\",\n  \"POLAND\",\n  \"PORTUGAL\",\n  \"ROMANIA\",\n  \"RUSSIA\",\n  \"SAUDI_ARABIA\",\n  \"SINGAPORE\",\n  \"SOUTH_AFRICA\",\n  \"SPAIN\",\n  \"SRI_LANKA\",\n  \"SWEDEN\",\n  \"SWITZERLAND\",\n  \"THAILAND\",\n  \"TURKEY\",\n  \"UGANDA\",\n  \"UKRAINE\",\n  \"UNITED_ARAB_EMIRATES\",\n  \"UNITED_KINGDOM\",\n  \"UNITED_STATES\",\n  \"VENEZUELA\",\n  \"VIETNAM\",\n  \"ZIMBABWE\",\n];\n\n// Define form schema with Zod\nconst signupFormSchema = z.object({\n  company_name: z.string().min(2, \"Company name must be at least 2 characters\"),\n  company_alias: z\n    .string()\n    .min(2, \"Company alias must be at least 2 characters\"),\n  country_of_incorporation: z.string().min(1, \"Please select a country\"),\n  company_pin: z.string().min(1, \"Company PIN/Tax ID is required\"),\n  date_of_incorporation: z.string().min(1, \"Date of incorporation is required\"),\n  company_email: z.string().email(\"Please enter a valid company email\"),\n  employee_count: z.coerce.number().min(1, \"Employee count must be at least 1\"),\n  admin_email: z.string().email(\"Please enter a valid admin email\"),\n  admin_username: z.string().min(3, \"Username must be at least 3 characters\"),\n  admin_phone: z.string().min(6, \"Phone number must be at least 6 characters\"),\n});\n\ntype SignupFormValues = z.infer<typeof signupFormSchema>;\n\nexport function SignupForm({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const [companyUniqueId, setCompanyUniqueId] = useState(\"\");\n  const router = useRouter();\n\n  const registerMutation = useRegisterCompany();\n\n  // Initialize form\n  const form = useForm<SignupFormValues>({\n    // @ts-ignore\n    resolver: zodResolver(signupFormSchema),\n    defaultValues: {\n      company_name: \"\",\n      company_alias: \"\",\n      country_of_incorporation: \"\",\n      company_pin: \"\",\n      date_of_incorporation: \"\",\n      company_email: \"\",\n      employee_count: 1,\n      admin_email: \"\",\n      admin_username: \"\",\n      admin_phone: \"\",\n    },\n  });\n\n  // Handle form submission\n  const onSubmit = async (data: SignupFormValues) => {\n    try {\n      const response = await registerMutation.mutateAsync({\n        ...data,\n        date_of_incorporation: new Date(\n          data.date_of_incorporation\n        ).toISOString(),\n      });\n\n      setCompanyUniqueId(response.company_unique_id);\n      setRegistrationSuccess(true);\n      toast.success(\"Company registered successfully!\");\n    } catch (error: any) {\n      const errorMessage = handleAuthError(error);\n      toast.error(errorMessage);\n    }\n  };\n\n  const goToLogin = () => {\n    router.push(\"/login\");\n  };\n\n  if (registrationSuccess) {\n    return (\n      <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n        <Toaster richColors />\n        <Card className=\"overflow-hidden\">\n          <CardContent className=\"p-8\">\n            <div className=\"flex flex-col gap-6 text-center\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4\">\n                  <svg\n                    className=\"w-8 h-8 text-green-600\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M5 13l4 4L19 7\"\n                    />\n                  </svg>\n                </div>\n                <h1 className=\"text-2xl font-bold text-kaziniBlue\">\n                  Registration Successful!\n                </h1>\n                <p className=\"text-balance text-kaziniMuted\">\n                  Your company has been registered successfully\n                </p>\n              </div>\n\n              <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                <h3 className=\"font-semibold text-kaziniBlue mb-2\">\n                  Important: Save Your Company ID\n                </h3>\n                <div className=\"bg-white p-3 rounded border\">\n                  <code className=\"text-lg font-mono font-bold text-blue-600\">\n                    {companyUniqueId}\n                  </code>\n                </div>\n                <p className=\"text-sm text-kaziniMuted mt-2\">\n                  You will need this Company ID to log in. Please save it in a\n                  secure place.\n                </p>\n              </div>\n\n              <div className=\"text-sm text-kaziniMuted\">\n                <p>\n                  A confirmation email has been sent to{\" \"}\n                  <strong>{form.getValues(\"admin_email\")}</strong> with your\n                  company details and login instructions.\n                </p>\n              </div>\n\n              <Button\n                onClick={goToLogin}\n                className=\"w-full bg-kaziniBlue hover:bg-kaziniBlueLight\"\n              >\n                Continue to Login\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <Toaster richColors />\n      <Card className=\"overflow-hidden\">\n        <CardContent className=\"grid p-0 md:grid-cols-2\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"p-6 md:p-8\">\n              <div className=\"flex flex-col gap-6\">\n                <div className=\"flex flex-col items-center text-center\">\n                  <h1 className=\"text-2xl font-bold text-kaziniBlue\">\n                    Register Your Company\n                  </h1>\n                  <p className=\"text-balance text-kaziniMuted\">\n                    Enter your company details to get started\n                  </p>\n                </div>\n\n                {/* Company Information */}\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold text-kaziniBlue\">\n                    Company Information\n                  </h3>\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <FormField\n                      control={form.control}\n                      name=\"company_name\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Company Name</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Acme Corporation\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"company_alias\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Company Alias</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Acme Corp\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <FormField\n                    control={form.control}\n                    name=\"country_of_incorporation\"\n                    render={({ field }) => (\n                      <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                        <FormLabel>Country of Incorporation</FormLabel>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                        >\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select a country\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            {COUNTRIES.map((country) => (\n                              <SelectItem key={country} value={country}>\n                                {country.replace(/_/g, \" \")}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <FormField\n                      control={form.control}\n                      name=\"company_pin\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Company PIN/Tax ID</FormLabel>\n                          <FormControl>\n                            <Input\n                              placeholder=\"Tax identification number\"\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"date_of_incorporation\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Date of Incorporation</FormLabel>\n                          <Popover>\n                            <PopoverTrigger asChild>\n                              <FormControl>\n                                <Button\n                                  variant={\"outline\"}\n                                  className={cn(\n                                    \"w-[240px] pl-3 text-left font-normal\",\n                                    !field.value && \"text-muted-foreground\"\n                                  )}\n                                >\n                                  {field.value ? (\n                                    format(field.value, \"PPP\")\n                                  ) : (\n                                    <span>Pick a date</span>\n                                  )}\n                                  <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                                </Button>\n                              </FormControl>\n                            </PopoverTrigger>\n                            <PopoverContent\n                              className=\"w-auto p-0\"\n                              align=\"start\"\n                            >\n                              <Calendar\n                                mode=\"single\"\n                                selected={\n                                  field.value\n                                    ? new Date(field.value)\n                                    : undefined\n                                }\n                                onSelect={(date) => {\n                                  field.onChange(\n                                    date ? date.toISOString() : \"\"\n                                  );\n                                }}\n                                disabled={(date) =>\n                                  date > new Date() ||\n                                  date < new Date(\"1900-01-01\")\n                                }\n                                captionLayout=\"dropdown\"\n                              />\n                            </PopoverContent>\n                          </Popover>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <FormField\n                      control={form.control}\n                      name=\"company_email\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Company Email</FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"email\"\n                              placeholder=\"info@company.com\"\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"employee_count\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Employee Count</FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"number\"\n                              min=\"1\"\n                              placeholder=\"10\"\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                </div>\n\n                {/* Admin Information */}\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold text-kaziniBlue\">\n                    Administrator Information\n                  </h3>\n\n                  <FormField\n                    control={form.control}\n                    name=\"admin_email\"\n                    render={({ field }) => (\n                      <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                        <FormLabel>Admin Email</FormLabel>\n                        <FormControl>\n                          <Input\n                            type=\"email\"\n                            placeholder=\"admin@company.com\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <FormField\n                      control={form.control}\n                      name=\"admin_username\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Admin Username</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"admin\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"admin_phone\"\n                      render={({ field }) => (\n                        <FormItem className=\"grid gap-2 text-kaziniBlue\">\n                          <FormLabel>Admin Phone</FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"tel\"\n                              placeholder=\"+1234567890\"\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-kaziniBlue hover:bg-kaziniBlueLight\"\n                  disabled={registerMutation.isPending}\n                >\n                  {registerMutation.isPending\n                    ? \"Registering...\"\n                    : \"Register Company\"}\n                </Button>\n\n                <div className=\"text-center text-sm text-kaziniBlue\">\n                  Already have an account?{\" \"}\n                  <a href=\"/login\" className=\"underline underline-offset-4\">\n                    Sign in\n                  </a>\n                </div>\n              </div>\n            </form>\n          </Form>\n\n          <div className=\"relative hidden md:block flex justify-center m-auto\">\n            <img\n              src=\"/images/kazini-hr-original-colors.png\"\n              alt=\"Image\"\n              className=\"w-[70%] m-auto\"\n            />\n          </div>\n        </CardContent>\n      </Card>\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\n        By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\n        and <a href=\"#\">Privacy Policy</a>.\n      </div>\n    </div>\n  );\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import(/* webpackMode: \"eager\", webpackExports: [\"SignupForm\"] */ \"/Users/aka/Workspace/KaziniHR/hrms/components/forms/signup-form.tsx\");\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":["labelVariants","cva","Label","React","ref","className","props","LabelPrimitive","cn","displayName","buttonVariants","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","asChild","Comp","Slot","Form","FormProvider","FormFieldContext","FormField","Provider","value","name","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","id","formItemId","formDescriptionId","formMessageId","FormItem","div","FormLabel","error","htmlFor","FormControl","aria-describedby","aria-invalid","p","FormMessage","children","body","String","message","Popover","PopoverPrimitive","PopoverTrigger","PopoverContent","align","sideOffset","Calendar","classNames","showOutsideDays","captionLayout","buttonVariant","formatters","components","defaultClassNames","getDefaultClassNames","DayPicker","raw","formatMonthDropdown","date","toLocaleString","month","root","months","nav","button_previous","button_next","month_caption","dropdowns","dropdown_root","dropdown","caption_label","table","weekdays","weekday","week","week_number_header","week_number","day","range_start","range_middle","range_end","today","outside","disabled","hidden","Root","rootRef","data-slot","Chevron","orientation","ChevronLeftIcon","ChevronRightIcon","ChevronDownIcon","DayButton","CalendarDayButton","WeekNumber","td","modifiers","focused","current","focus","data-day","toLocaleDateString","data-selected-single","selected","data-range-start","data-range-end","data-range-middle","COUNTRIES","signupFormSchema","z","company_name","min","company_alias","country_of_incorporation","company_pin","date_of_incorporation","company_email","email","employee_count","number","admin_email","admin_username","admin_phone","SignupForm","registrationSuccess","setRegistrationSuccess","useState","companyUniqueId","setCompanyUniqueId","router","useRouter","registerMutation","useRegisterCompany","form","useForm","resolver","zodResolver","defaultValues","onSubmit","data","response","mutateAsync","Date","toISOString","company_unique_id","toast","success","errorMessage","handleAuthError","Toaster","richColors","Card","CardContent","svg","fill","stroke","viewBox","path","strokeLinecap","strokeLinejoin","strokeWidth","d","h1","h3","code","strong","getValues","onClick","goToLogin","push","handleSubmit","control","render","field","Input","placeholder","Select","onValueChange","onChange","defaultValue","SelectTrigger","SelectValue","SelectContent","map","country","SelectItem","replace","format","span","CalendarIcon","mode","undefined","onSelect","type","isPending","a","href","img","src","alt","SelectPrimitive","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","position","Check","input"],"sourceRoot":"","ignoreList":[]}